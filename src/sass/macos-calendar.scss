/*
**************************************************************
macOS Calendar App Theme

Styled after the Calendar App in macOS.
**************************************************************
*/

.macos-calendar.calendar-month {

	/* Font */
	font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
	font-weight: 400;

	/* Header */
	.header {
		padding: 1em;
		justify-content: inherit;
		
		.thisMonth {
			display: block;
		}
		.monthLabel {
			padding: 0;
		}
		
		/* Buttons */
		button {
			/* user agent defaults */
			color: buttontext;
			background-color: buttonface;
			box-sizing: border-box;
			padding: 2px 6px 3px;
			border-width: 2px;
			border-style: outset;
			border-color: buttonface;
			border-image: initial;
			/* customisations */
			font-size: 0.85em;
			line-height: 0.8em;
			padding: 0.4em 0.6em;
			cursor: pointer;
		}

		button:active {
			border-style: inset;
		}

		.previousMonth button::after { content: "\003c"; }
		.nextMonth button::after { content: "\003e"; }

		.thisMonth { order: 1; flex-grow: 1; }
		.previousMonth { order: 2; flex-grow: 0; }
		.currentMonth { order: 3; flex-grow: 0; }
		.nextMonth { order: 4; flex-grow: 0; }

		.previousYear { display: none; }
		.nextYear { display: none; }

		.monthName {
			font-size: 1.9em;
			font-weight: 300;
		}
		.yearNumber {
			padding-left: 0.2em;
			font-size: 2em;
			font-weight: 100;
		}
		.currentMonth button::after {
			content: 'Today';
		}
	}

	/* ~Global styles */
	.month,
	.header,
	.week,
	.dayList {
		border-color: #DDD;
	}
	.day {
		border-color: #DDD;
	}

	/* Day content */
	.day .content {
		padding: 0 0.2em 0.2em 0.2em;
	}

	/* Day number */
	.day .date {
		margin-top: 0.2em;
		color: #333;
	}

	/* Weekend days */
	.day.dow0,
	.day.dow6 {
		background-color: #f5f5f5;
		color: #c3c3c3;
	}
	.day.dow0 .date,
	.day.dow6 .date {
		color: #878787;
	}
	/* Outside of current month */
	.day.outsideOfMonth .date {
		font-weight: 100;
		color: #c3c3c3;
	}
	/* Today */
	.day.today .date {
		margin-top: 0.15em;
		padding: 0.35em;
		border-radius: 50%;
		font-weight: 100;
		background-color: #fc3d39;
		color: #fff;
	}

	/* Days of week header */
	.dayList .day:not(:last-child) {
		border-right: 0;
	}
	.dayList .day {
		font-weight: 200;
		border-top: 0;
		padding-right: 0.4em;
		text-align: right;
		background-color: transparent;
	}

	/* Events */
	div[class*=" span"] {
		background-color: rgba(42, 174, 245, 0.3);
		text-align: left;
		border: 0;
		border-radius: 0;
		padding: 0.3em 0.3em 0.2em 0.8em;
		font-size: 0.8em;
		line-height: 0.8em;
	}
	.event.continued {
		padding-left: 1.2em;
	}
	.event.span1:not(.toBeContinued) {
		background-color: transparent;
		padding-left: 1.2em;
	}
	.event.span1:not(.continued):not(.toBeContinued):before {
		content: "\2219";
		font-size: 1.3em;
		color: rgb(42, 174, 245);
		vertical-align: middle;
		display: block;
		position: absolute;
		left: 0.2em;
		width: 0.8em;
	}
	/* Event Colors */
	.event.purple:not(.span1),
	.event.purple.continued {
		background-color: rgba(203, 119, 223, 0.3);
	}
	.event.purple.span1:not(.existing):before {
		color: rgb(203, 119, 223);
	}
	.event.orange:not(.span1),
	.event.orange.continued {
		background-color: rgba(247, 197, 78, 0.3);
	}
	.event.orange.span1:not(.existing):before {
		color: rgb(247, 197, 78);
	}
	.event.continued::before,
	.event.toBeContinued::after { 
		content: "";
	}
	/* Selected event colors */
	.event.active,
	.event.span1.active {
		color: #fff;
		background-color: rgba(42, 174, 245, 1);
	}
	.event.active.span1:not(.existing):before {
		color: #fff;
	}
	.event.purple.active {
		background-color: rgba(203, 119, 223, 1);
	}
	.event.orange.active {
		background-color: rgba(247, 197, 78, 1);
	}
	/* Event positioning */
	.event.slot1 { top: 2.5em; }
	.event.slot2 { top: calc(1 * 1.4em + 2.5em); }
	.event.slot3 { top: calc(2 * 1.4em + 2.5em); }
	.event.slot4 { top: calc(3 * 1.4em + 2.5em); }
	.event.slot5 { top: calc(4 * 1.4em + 2.5em); }
	.event.slot6 { top: calc(5 * 1.4em + 2.5em); }
	.event.slot7 { top: calc(6 * 1.4em + 2.5em); }
	.event.slot8 { top: calc(7 * 1.4em + 2.5em); }
	.event.slot9 { top: calc(8 * 1.4em + 2.5em); }
	.event.slot10 { top: calc(9 * 1.4em + 2.5em); }

	.event.offset0 { left: calc(.4em); }
	.event.offset1 { left: calc((100% / 7) + .4em); }
	.event.offset2 { left: calc((200% / 7) + .4em); }
	.event.offset3 { left: calc((300% / 7) + .4em); }
	.event.offset4 { left: calc((400% / 7) + .4em); }
	.event.offset5 { left: calc((500% / 7) + .4em); }
	.event.offset6 { left: calc((600% / 7) + .4em); }
	.event.offset0.span1:not(.toBeContinued) { left: calc(0em); }
	.event.offset1.span1:not(.toBeContinued) { left: calc((100% / 7)); }
	.event.offset2.span1:not(.toBeContinued) { left: calc((200% / 7)); }
	.event.offset3.span1:not(.toBeContinued) { left: calc((300% / 7)); }
	.event.offset4.span1:not(.toBeContinued) { left: calc((400% / 7)); }
	.event.offset5.span1:not(.toBeContinued) { left: calc((500% / 7)); }
	.event.offset6.span1:not(.toBeContinued) { left: calc((600% / 7)); }

	.event.offset0.continued { left: calc(0em); }
	.event.offset1.continued { left: calc((100% / 7)); }
	.event.offset2.continued { left: calc((200% / 7)); }
	.event.offset3.continued { left: calc((300% / 7)); }
	.event.offset4.continued { left: calc((400% / 7)); }
	.event.offset5.continued { left: calc((500% / 7)); }
	.event.offset6.continued { left: calc((600% / 7)); }

	/* Metrics for events spanning dates */
	.event.span1 { width: calc((100% / 7)); }
	.event.span2 { width: calc((200% / 7) - .8em); }
	.event.span3 { width: calc((300% / 7) - .8em); }
	.event.span4 { width: calc((400% / 7) - .8em); }
	.event.span5 { width: calc((500% / 7) - .8em); }
	.event.span6 { width: calc((600% / 7) - .8em); }
	.event.span7 { width: calc((700% / 7) - .8em); }

	.event.span1.continued,
	.event.span1.toBeContinued { width: calc((100% / 7) - .4em); }
	.event.span2.continued,
	.event.span2.toBeContinued { width: calc((200% / 7) - .4em); }
	.event.span3.continued,
	.event.span3.toBeContinued { width: calc((300% / 7) - .4em); }
	.event.span4.continued,
	.event.span4.toBeContinued { width: calc((400% / 7) - .4em); }
	.event.span5.continued,
	.event.span5.toBeContinued { width: calc((500% / 7) - .4em); }
	.event.span6.continued,
	.event.span6.toBeContinued { width: calc((600% / 7) - .4em); }
	.event.span7.continued,
	.event.span7.toBeContinued { width: calc((700% / 7) - .4em); }
	.event.span1.continued.toBeContinued { width: calc((100% / 7)); }
	.event.span2.continued.toBeContinued { width: calc((200% / 7)); }
	.event.span3.continued.toBeContinued { width: calc((300% / 7)); }
	.event.span4.continued.toBeContinued { width: calc((400% / 7)); }
	.event.span5.continued.toBeContinued { width: calc((500% / 7)); }
	.event.span6.continued.toBeContinued { width: calc((600% / 7)); }
	.event.span7.continued.toBeContinued { width: calc((700% / 7)); }

	/* Allows emoji icons or labels (such as holidays) to be added more easily to specific dates by having the margin set already. */
	.day .date::before { margin-right: 0.5em; }

	.day .content.draghover {
		border: 0.2em solid yellow;
	}

}
